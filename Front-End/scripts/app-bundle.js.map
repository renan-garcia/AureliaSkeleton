{"version":3,"sources":["app.js","authConfig.js","environment.js","main.js","resources/index.js","resources/elements/login.js","views/cliente/cliente.js","views/login/logado.js","views/login/login.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","endpoint","configureEndpoints","loginUrl","signupUrl","profileUrl","unlinkUrl","loginRedirect","loginOnSignup","storageChangedReload","expiredRedirect","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","registerEndpoint","baseConfig","start","then","setRoot","Login","authService","username","password","currentToken","statusLogin","getAccessToken","validarLogin","login","grant_type","headers","catch","notification","error","console","Cliente"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n\n  configureRouter(config, router){\n    config.title = 'Tokyo Erp';\n    config.map([\n       { route: '', moduleId: 'views/cliente/cliente',   title: 'Selecione'},\n       { route: 'login', moduleId: 'views/login/login',   name: 'login'}\n\n    ]);\n\n    this.router = router;\n  }\n}","export default {\r\n    endpoint: 'auth',\r\n    configureEndpoints: ['auth'],\r\n    loginUrl: '/api/security/token',  \r\n    signupUrl: 'users',\r\n    profileUrl: 'me',\r\n    unlinkUrl: 'me/unlink',\r\n    loginRedirect: '#',\r\n\r\n    loginOnSignup: false,\r\n    storageChangedReload: false,    // ensure secondary tab reloading after auth status changes\r\n    expiredRedirect: 1            // redirect to logoutRedirect after token expiration\r\n};","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport authConfig from 'authConfig';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.use\n    .plugin('aurelia-api', configure => {\n      configure\n        .registerEndpoint('auth', 'http://localhost:57174');\n        //.registerEndpoint('protected-api', 'https://myapi.org/protected-api')\n        //.registerEndpoint('public-api', 'http://myapi.org/public-api');\n    })\n    .plugin('aurelia-authentication', baseConfig => {\n        baseConfig.configure(authConfig);\n    });\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from \"aurelia-dependency-injection\";\r\nimport {AuthService} from \"aurelia-authentication\";\r\n\r\n@inject(AuthService)\r\nexport class Login {\r\n\r\n  username = 'renangarcia';\r\n\r\n  password = 'renangarcia';\r\n\r\n  currentToken = 'Não Logado';\r\n\r\n  constructor(authService) {\r\n    this.authService  = authService;\r\n    let statusLogin = this.authService.getAccessToken();\r\n    if(statusLogin)\r\n      this.currentToken = \"Logado\";\r\n    else\r\n     this.currentToken = \"Não logado\";\r\n     \r\n  }\r\n\r\n  validarLogin(){\r\n    let statusLogin = this.authService.getAccessToken();\r\n    if(statusLogin)\r\n      this.currentToken = \"Logado\";\r\n    else\r\n     this.currentToken = \"Não logado\";\r\n  }\r\n\r\n  login() {\r\n   \r\n    return this.authService.login({\r\n      username: this.username,\r\n      password: this.password,\r\n      grant_type: \"password\"\r\n    },\r\n    { \r\n      headers: {\r\n                  'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    }\r\n    ).catch(error => {\r\n      this.notification.error('Login failed!');\r\n\r\n      console.error(error);\r\n    });\r\n  }\r\n}","import {inject} from \"aurelia-dependency-injection\";\r\nimport { AuthService } from \"aurelia-authentication\";\r\n\r\n@inject(AuthService)\r\nexport class Cliente {\r\n    constructor(authService) {\r\n        this.statusLogin = authService.getAccessToken();\r\n    }\r\n}","import {inject} from \"aurelia-dependency-injection\";\r\nimport {AuthService} from \"aurelia-authentication\";\r\n\r\n@inject(AuthService)\r\nexport class Login {\r\n\r\n  username = 'renangarcia';\r\n\r\n  password = 'renangarcia';\r\n\r\n  currentToken = 'Não Logado';\r\n\r\n  constructor(authService) {\r\n    this.authService  = authService;\r\n    let statusLogin = this.authService.getAccessToken();\r\n    if(statusLogin)\r\n      this.currentToken = \"Logado\";\r\n    else\r\n     this.currentToken = \"Não logado\";\r\n  }\r\n\r\n  validarLogin(){\r\n    let statusLogin = this.authService.getAccessToken();\r\n    if(statusLogin)\r\n      this.currentToken = \"Logado\";\r\n    else\r\n     this.currentToken = \"Não logado\";\r\n  }\r\n\r\n  login() {\r\n   \r\n    return this.authService.login({\r\n      username: this.username,\r\n      password: this.password,\r\n      grant_type: \"password\"\r\n    },\r\n    { \r\n      headers: {\r\n                  'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    }\r\n    ).catch(error => {\r\n      this.notification.error('Login failed!');\r\n\r\n      console.error(error);\r\n    });\r\n  }\r\n}","import {inject} from \"aurelia-dependency-injection\";\r\nimport {AuthService} from \"aurelia-authentication\";\r\n\r\n@inject(AuthService)\r\nexport class Login {\r\n\r\n  username = 'renangarcia';\r\n\r\n  password = 'renangarcia';\r\n\r\n  currentToken = 'Não Logado';\r\n\r\n  constructor(authService) {\r\n    this.authService  = authService;\r\n    let statusLogin = this.authService.getAccessToken();\r\n    if(statusLogin)\r\n      this.currentToken = \"Logado\";\r\n    else\r\n     this.currentToken = \"Não logado\";\r\n     \r\n  }\r\n\r\n  validarLogin(){\r\n    let statusLogin = this.authService.getAccessToken();\r\n    if(statusLogin)\r\n      this.currentToken = \"Logado\";\r\n    else\r\n     this.currentToken = \"Não logado\";\r\n  }\r\n\r\n  login() {\r\n   \r\n    return this.authService.login({\r\n      username: this.username,\r\n      password: this.password,\r\n      grant_type: \"password\"\r\n    },\r\n    { \r\n      headers: {\r\n                  'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    }\r\n    ).catch(error => {\r\n      this.notification.error('Login failed!');\r\n\r\n      console.error(error);\r\n    });\r\n  }\r\n}"],"sourceRoot":".."}